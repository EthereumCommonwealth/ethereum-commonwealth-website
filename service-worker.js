"use strict";var precacheConfig=[["/ethereum-commonwealth-website/index.html","d851179fe88e3fb9b6b1044253dee737"],["/ethereum-commonwealth-website/static/css/main.7676c467.css","d6ba801a211026309b813dd4897fbc37"],["/ethereum-commonwealth-website/static/js/main.d6fad9c7.js","1fc6a51aefa8283acbdc342f83dd3679"],["/ethereum-commonwealth-website/static/media/0xinfra.f4a49afe.svg","f4a49afecaac5895ffb193d1ee523f16"],["/ethereum-commonwealth-website/static/media/Union.0ff55b1f.svg","0ff55b1f7fb6d98da8f22b22f69410f2"],["/ethereum-commonwealth-website/static/media/bg0.73aafdd4.svg","73aafdd4b65bb43f0f48d6cb60c418af"],["/ethereum-commonwealth-website/static/media/bg1.61aa66ac.svg","61aa66acf68f052aa7e109c65452c172"],["/ethereum-commonwealth-website/static/media/bg2.c9ef3744.svg","c9ef3744cc40cb33fbba6f63e6e31752"],["/ethereum-commonwealth-website/static/media/dexaran_avatar.5405de41.png","5405de41e2db12e29b6a8d8a0ab24adc"],["/ethereum-commonwealth-website/static/media/jchimienti_avatar.4dbcabc8.jpg","4dbcabc8bac406df4444a64e626cedce"],["/ethereum-commonwealth-website/static/media/logo-clo.e98f3d91.svg","e98f3d918f61981a7b45193872f49192"],["/ethereum-commonwealth-website/static/media/logo-etc.6c58656d.png","6c58656d8b7b05e6d9b2727837cbef88"],["/ethereum-commonwealth-website/static/media/web.44a1c03c.svg","44a1c03cc49ad735c4c5b97b3d89c875"],["/ethereum-commonwealth-website/static/media/yohan_avatar.37227dbb.jpg","37227dbbab28197994faac4001638058"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var r="/ethereum-commonwealth-website/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});